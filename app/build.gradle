apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def key_alias = properties.getProperty("keyAlias")
def key_password = properties.getProperty("keyPassword")
def store_password = properties.getProperty("storePassword")
def key_store = properties.getProperty("keystore.dir")

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        applicationId "com.caij.codehub"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "github"]
    }

    signingConfigs {
        debug {
            // No debug config
        }

        release {
            if (key_store != null) {
                storeFile file(key_store)
                storePassword store_password
                keyAlias key_alias
                keyPassword key_password
            }
        }
    }

    buildTypes {

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        // CodeHub_v1.0_2015-01-15_wandoujia.apk
//                        def fileName = "CodeHub_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)
//                    }
//                }
//            }

        }

    }

    productFlavors {

        github {}
        wandoujia {}
        googleplay {}

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project (':lib')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.yqritc:recyclerview-flexibledivider:1.2.6'

    compile 'com.jakewharton:butterknife:7.0.1'

    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.github.bumptech.glide:okhttp-integration:1.3.0'

    compile 'com.umeng.analytics:analytics:latest.integration'

    debugCompile 'com.facebook.stetho:stetho:1.1.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp:1.1.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'

//    apt 'com.google.dagger:dagger-compiler:2.0'
//    compile 'com.google.dagger:dagger:2.0'
//    provided 'org.glassfish:javax.annotation:10.0-b28'
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}



